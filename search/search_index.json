{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ConsultantUtils","text":""},{"location":"#an-useful-java-library-for-it-consultants","title":"An useful Java library for IT Consultants","text":"<p>ConsultantUtils is an open source Java utility library for all IT consultants and all developers who needs to be faster at work. This library contains some methods and data structures to make faster the consultants work.</p> <p>Version: 0.1.7</p> <p>Author: Claudio S. Di Mauro</p> <p>Created: 8 December 2022</p> <p>Update: 16 June 2024</p> <p>\"Code is like humor. When you have to explain it, it's bad.\" \u2013 Cory House </p>"},{"location":"#installation","title":"Installation","text":"<p>This library contains all needed dependency to work properly. The only dependency you have to install to use it is already available in the library.  </p> <p>Using Maven, read the following steps to understand how to do:  </p> <ol> <li>Download from the project's GitHub page the JAR file of the latest build;</li> <li>Place the downloaded file under a folder of your Maven project;</li> <li>In the pom of your Maven project, set the following dependency:</li> </ol> <pre><code>&lt;!-- ConsultantUtils --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.github.hvna9&lt;/groupId&gt;\n  &lt;artifactId&gt;consultant-utils&lt;/artifactId&gt;\n  &lt;version&gt;${selected_version}&lt;/version&gt;\n  &lt;scope&gt;system&lt;/scope&gt;\n  &lt;systemPath&gt;${path}\\Consultant-Utils-${selected_version}.jar&lt;/systemPath&gt;\n&lt;/dependency&gt;\n</code></pre> <p>where:</p> <ul> <li><code>${selected_version}</code> is the variable setted in the properties tag of the POM, which identifies the version you want to use (the same you downloaded at step 1);</li> <li><code>${path}</code> is the variable setted in the properties tag of the POM, which identifies the absolute path of the JAR.</li> </ul> <p> pom.xml example:</p> <pre><code>&lt;project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\"&gt;\n  &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n  &lt;groupId&gt;com.groupId&lt;/groupId&gt;\n  &lt;artifactId&gt;demo&lt;/artifactId&gt;\n  &lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;\n  &lt;name&gt;Demo&lt;/name&gt;\n\n  &lt;properties&gt;\n    &lt;selected_version&gt;0.1.6-SNAPSHOT&lt;/selected_version&gt;\n    &lt;path&gt;C:\\Users\\UserName\\consultant-utils\\&lt;/path&gt;\n  &lt;/properties&gt;\n\n  &lt;dependencies&gt;\n    &lt;dependency&gt;\n      &lt;groupId&gt;com.github.h9cu&lt;/groupId&gt;\n      &lt;artifactId&gt;consultant-utils&lt;/artifactId&gt;\n      &lt;version&gt;${selected_version}&lt;/version&gt;\n      &lt;scope&gt;system&lt;/scope&gt;\n      &lt;systemPath&gt;${path}\\Consultant-Utils-${selected_version}.jar&lt;/systemPath&gt;\n    &lt;/dependency&gt;\n  &lt;/dependencies&gt;\n\n&lt;/project&gt;\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"documentation/","title":"Documentation","text":""},{"location":"documentation/#annotations","title":"Annotations","text":""},{"location":"documentation/#datafileexcel","title":"<code>data.file.excel</code>","text":"<ul> <li><code>@ToExcel</code>: This annotation, written above a model, indicates that the annotated class should represents the table of an Excel.</li> <li><code>@XslxExcel</code>: Written above a model, indicates that the annotated class should represents the table of an Excel which will be saved as .xslx.</li> <li><code>@ExcelColumnName</code>: Written above a property of a model, indicates the name of the column represented by the property in the Excel file.</li> <li><code>@ExcelColumnPosition</code>: Written above a property of a model, indicates the position of the column represented by the property in the Excel file.</li> </ul>"},{"location":"documentation/#constants","title":"Constants","text":"<ul> <li><code>FileExtension</code>: it contains the main files extensions.</li> <li><code>Placeholder</code>: it contains some Lorem Ipsum placeholder text. You can decide the lenght of the constant string in a set of placeholders.</li> </ul>"},{"location":"documentation/#data-manipulators","title":"Data Manipulators","text":"<p>The package <code>constantutils.data</code> contains some classes useful to manipulate several types of data.</p>"},{"location":"documentation/#datemanipulator","title":"DateManipulator","text":"<p>This class allow to work with standards date types. It contains some static methods, that you can use without the istantiation of a DateManipulator object.</p> Modifier and type Method Description static LocalDateTime dateToLocalDateTime(Date date) It converts a Date into LocalDateTime static String dateToString(Date date, String pattern) Transform a Date into a String, based on the passed date-pattern static Date localDateTimeToDate(LocalDateTime localDateTime) It converts a LocalDateTime into a Date. static Date stringToDate(String date, String pattern) It creates a Date from a String static Timestamp stringToTimestamp(String date, String pattern) It converts a String with specified format-style into a Timestamp object"},{"location":"documentation/#filemanipulator","title":"FileManipulator","text":"<p>This class allow to work with files and their extension. It's possible to generate files (e.g. Excel), starting from a list of objects.</p> Modifier and type Method Description static LocalDateTime dateToLocalDateTime(Date date) It converts a Date into LocalDateTime static String dateToString(Date date, String pattern) Transform a Date into a String, based on the passed date-pattern static Date localDateTimeToDate(LocalDateTime localDateTime) It converts a LocalDateTime into a Date. static Date stringToDate(String date, String pattern) It creates a Date from a String static Timestamp stringToTimestamp(String date, String pattern) It converts a String with specified format-style into a Timestamp object"},{"location":"documentation/#objectmanipulator","title":"ObjectManipulator","text":"<p>This class uses static methods to manipulate objects (eg. fast object conversion into json and vice-versa).</p> Modifier and type Method Description static String convertToJson(T obj) To create a Json String from an Object. static T convertToObject(String json, Class className) To create an Object from a JSON String."},{"location":"documentation/#stringmanipulator","title":"StringManipulator","text":"<p>This class uses static methods to manipulate String objects and work on them.</p> Modifier and type Method Description static String generatePleaceholder(int size) This method return a placeholder string with a specified length. static String reverse(String str) This method is defined to reverse the string passed as parameter."},{"location":"documentation/#exception","title":"Exception","text":""},{"location":"documentation/#exceptionsannotations","title":"<code>exceptions.annotations</code>","text":"<ul> <li><code>MissingAnnotationException</code>: a custom exception to signal the missing of a necessary annotation (e.g. during the generation of an Excel).</li> </ul>"},{"location":"documentation/#testing","title":"Testing","text":""},{"location":"documentation/#junit-fastmodeltester","title":"JUnit - FastModelTester","text":"<p>Useful method to use during JUnit testing.</p> Modifier and type Method Description static void testAllModels(Class... classes) It allows to create fast junit tests for getters and setters methods of simple Java models and beans."},{"location":"documentation/#mock-objectmocker","title":"Mock - ObjectMocker","text":"<p>A class to generate mocked objects.</p> Modifier and type Method Description static List createMultiObject(Class className, int size) This method can be used to create a list of objects parameterized on the generic type T. static T createSingleObject(Class className) This method can be used to create an object parameterized on the generic object T. static T getMock(String mockName, Class className) To use this method you have to create a folder named \"mocks\" under the src/main/resources or src/test/resources folder of your project, depending on the application context. static T getMock(String mockName, String subfolderPath, Class className) To use this method you have to create a folder named \"mocks\" under the src/main/resources or src/test/resources folder of your project, depending on the application context."},{"location":"license/","title":"License","text":"<pre><code>Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/\n</code></pre> <p>TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION</p> <ol> <li> <p>Definitions.</p> <p>\"License\" shall mean the terms and conditions for use, reproduction,   and distribution as defined by Sections 1 through 9 of this document.</p> <p>\"Licensor\" shall mean the copyright owner or entity authorized by   the copyright owner that is granting the License.</p> <p>\"Legal Entity\" shall mean the union of the acting entity and all   other entities that control, are controlled by, or are under common   control with that entity. For the purposes of this definition,   \"control\" means (i) the power, direct or indirect, to cause the   direction or management of such entity, whether by contract or   otherwise, or (ii) ownership of fifty percent (50%) or more of the   outstanding shares, or (iii) beneficial ownership of such entity.</p> <p>\"You\" (or \"Your\") shall mean an individual or Legal Entity   exercising permissions granted by this License.</p> <p>\"Source\" form shall mean the preferred form for making modifications,   including but not limited to software source code, documentation   source, and configuration files.</p> <p>\"Object\" form shall mean any form resulting from mechanical   transformation or translation of a Source form, including but   not limited to compiled object code, generated documentation,   and conversions to other media types.</p> <p>\"Work\" shall mean the work of authorship, whether in Source or   Object form, made available under the License, as indicated by a   copyright notice that is included in or attached to the work   (an example is provided in the Appendix below).</p> <p>\"Derivative Works\" shall mean any work, whether in Source or Object   form, that is based on (or derived from) the Work and for which the   editorial revisions, annotations, elaborations, or other modifications   represent, as a whole, an original work of authorship. For the purposes   of this License, Derivative Works shall not include works that remain   separable from, or merely link (or bind by name) to the interfaces of,   the Work and Derivative Works thereof.</p> <p>\"Contribution\" shall mean any work of authorship, including   the original version of the Work and any modifications or additions   to that Work or Derivative Works thereof, that is intentionally   submitted to Licensor for inclusion in the Work by the copyright owner   or by an individual or Legal Entity authorized to submit on behalf of   the copyright owner. For the purposes of this definition, \"submitted\"   means any form of electronic, verbal, or written communication sent   to the Licensor or its representatives, including but not limited to   communication on electronic mailing lists, source code control systems,   and issue tracking systems that are managed by, or on behalf of, the   Licensor for the purpose of discussing and improving the Work, but   excluding communication that is conspicuously marked or otherwise   designated in writing by the copyright owner as \"Not a Contribution.\"</p> <p>\"Contributor\" shall mean Licensor and any individual or Legal Entity   on behalf of whom a Contribution has been received by Licensor and   subsequently incorporated within the Work.</p> </li> <li> <p>Grant of Copyright License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       copyright license to reproduce, prepare Derivative Works of,       publicly display, publicly perform, sublicense, and distribute the       Work and such Derivative Works in Source or Object form.</p> </li> <li> <p>Grant of Patent License. Subject to the terms and conditions of       this License, each Contributor hereby grants to You a perpetual,       worldwide, non-exclusive, no-charge, royalty-free, irrevocable       (except as stated in this section) patent license to make, have made,       use, offer to sell, sell, import, and otherwise transfer the Work,       where such license applies only to those patent claims licensable       by such Contributor that are necessarily infringed by their       Contribution(s) alone or by combination of their Contribution(s)       with the Work to which such Contribution(s) was submitted. If You       institute patent litigation against any entity (including a       cross-claim or counterclaim in a lawsuit) alleging that the Work       or a Contribution incorporated within the Work constitutes direct       or contributory patent infringement, then any patent licenses       granted to You under this License for that Work shall terminate       as of the date such litigation is filed.</p> </li> <li> <p>Redistribution. You may reproduce and distribute copies of the       Work or Derivative Works thereof in any medium, with or without       modifications, and in Source or Object form, provided that You       meet the following conditions:</p> <p>(a) You must give any other recipients of the Work or       Derivative Works a copy of this License; and</p> <p>(b) You must cause any modified files to carry prominent notices       stating that You changed the files; and</p> <p>(c) You must retain, in the Source form of any Derivative Works       that You distribute, all copyright, patent, trademark, and       attribution notices from the Source form of the Work,       excluding those notices that do not pertain to any part of       the Derivative Works; and</p> <p>(d) If the Work includes a \"NOTICE\" text file as part of its       distribution, then any Derivative Works that You distribute must       include a readable copy of the attribution notices contained       within such NOTICE file, excluding those notices that do not       pertain to any part of the Derivative Works, in at least one       of the following places: within a NOTICE text file distributed       as part of the Derivative Works; within the Source form or       documentation, if provided along with the Derivative Works; or,       within a display generated by the Derivative Works, if and       wherever such third-party notices normally appear. The contents       of the NOTICE file are for informational purposes only and       do not modify the License. You may add Your own attribution       notices within Derivative Works that You distribute, alongside       or as an addendum to the NOTICE text from the Work, provided       that such additional attribution notices cannot be construed       as modifying the License.</p> <p>You may add Your own copyright statement to Your modifications and   may provide additional or different license terms and conditions   for use, reproduction, or distribution of Your modifications, or   for any such Derivative Works as a whole, provided Your use,   reproduction, and distribution of the Work otherwise complies with   the conditions stated in this License.</p> </li> <li> <p>Submission of Contributions. Unless You explicitly state otherwise,       any Contribution intentionally submitted for inclusion in the Work       by You to the Licensor shall be under the terms and conditions of       this License, without any additional terms or conditions.       Notwithstanding the above, nothing herein shall supersede or modify       the terms of any separate license agreement you may have executed       with Licensor regarding such Contributions.</p> </li> <li> <p>Trademarks. This License does not grant permission to use the trade       names, trademarks, service marks, or product names of the Licensor,       except as required for reasonable and customary use in describing the       origin of the Work and reproducing the content of the NOTICE file.</p> </li> <li> <p>Disclaimer of Warranty. Unless required by applicable law or       agreed to in writing, Licensor provides the Work (and each       Contributor provides its Contributions) on an \"AS IS\" BASIS,       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or       implied, including, without limitation, any warranties or conditions       of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A       PARTICULAR PURPOSE. You are solely responsible for determining the       appropriateness of using or redistributing the Work and assume any       risks associated with Your exercise of permissions under this License.</p> </li> <li> <p>Limitation of Liability. In no event and under no legal theory,       whether in tort (including negligence), contract, or otherwise,       unless required by applicable law (such as deliberate and grossly       negligent acts) or agreed to in writing, shall any Contributor be       liable to You for damages, including any direct, indirect, special,       incidental, or consequential damages of any character arising as a       result of this License or out of the use or inability to use the       Work (including but not limited to damages for loss of goodwill,       work stoppage, computer failure or malfunction, or any and all       other commercial damages or losses), even if such Contributor       has been advised of the possibility of such damages.</p> </li> <li> <p>Accepting Warranty or Additional Liability. While redistributing       the Work or Derivative Works thereof, You may choose to offer,       and charge a fee for, acceptance of support, warranty, indemnity,       or other liability obligations and/or rights consistent with this       License. However, in accepting such obligations, You may act only       on Your own behalf and on Your sole responsibility, not on behalf       of any other Contributor, and only if You agree to indemnify,       defend, and hold each Contributor harmless for any liability       incurred by, or claims asserted against, such Contributor by reason       of your accepting any such warranty or additional liability.</p> </li> </ol> <p>END OF TERMS AND CONDITIONS</p> <p>APPENDIX: How to apply the Apache License to your work.</p> <pre><code>  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.\n</code></pre> <p>Copyright \u00a9 2023 - Claudio S. Di Mauro</p> <p>Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p> <p>http://www.apache.org/licenses/LICENSE-2.0</p> <p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>"},{"location":"usage-example/","title":"Usage Example","text":"<p>Tutorials on how to use the library on all its parts.</p>"},{"location":"usage-example/#constants","title":"Constants","text":"<p>Tutorials on use of <code>constants</code> package.</p>"},{"location":"usage-example/#placeholder","title":"Placeholder","text":"<p>Understand how to use a placeholder string:</p> <pre><code>import io.github.hvna9.consultantutils.constants.Placeholder;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    String loremIpsum10 = Placeholder.LOREM_IPSUM_10;\n    String loremIpsum100 = Placeholder.LOREM_IPSUM_100;\n\n    System.out.println(Placeholder.LOREM_IPSUM_10);\n    System.out.println(\"------\");\n    System.out.println(Placeholder.LOREM_IPSUM_100);\n  }\n\n}\n</code></pre> <p>Output:</p> <pre><code>Lorem nam.\n------\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Sed auctor nulla et lobortis fermentum leo.\n</code></pre>"},{"location":"usage-example/#data-manipulators","title":"Data Manipulators","text":"<p>Tutorials on use of <code>data</code> package.</p>"},{"location":"usage-example/#datemanipulator","title":"DateManipulator","text":"<p>A class with static methods to use on conversion and parsing of Date types.</p> <p></p>"},{"location":"usage-example/#convert-a-string-into-date","title":"Convert a String into Date","text":"<p>To convert a String into a <code>java.util.Date</code> we'll use the static method <code>stringToDate()</code>. This method accept two String as parameters, the first one is the string we want to convert into a Date, the second one is the pattern of the passed String. Be sure to use the right pattern to identify and parse the String, or you'll get a <code>ParseException</code>.</p> <pre><code>import java.text.ParseException;\nimport java.util.Date;\n\nimport io.github.hvna9.consultantutils.data.DateManipulator;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    String date = \"12/01/2023\";\n    Date dateFromString = null;\n\n    try {\n      dateFromString = DateManipulator.stringToDate(date, \"dd/MM/yyyy\");\n    } catch (ParseException e) {\n      e.printStackTrace();\n    }\n\n    System.out.println(dateFromString);\n  }\n\n}\n</code></pre> <p>Output:</p> <pre><code>Thu Jan 12 00:00:00 CET 2023\n</code></pre> <p>If we use a wrong pattern, as in the following example</p> <pre><code>import java.text.ParseException;\nimport java.util.Date;\n\nimport io.github.hvna9.consultantutils.data.DateManipulator;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    String date = \"12/01/2023\";\n    Date dateFromString = null;\n\n    try {\n      dateFromString = DateManipulator.stringToDate(date, \"yyyy-MM-dd\"); //the pattern style is different \n                                                                         //from the passed String\n    } catch (ParseException e) {\n      e.printStackTrace();\n    }\n\n    System.out.println(dateFromString);\n  }\n\n}\n</code></pre> <p>we'll get an exception:</p> <pre><code>java.text.ParseException: Unparseable date: \"12/01/2023\"\nat java.base/java.text.DateFormat.parse(DateFormat.java:399)\nat io.github.h9lib.consultantutils.data.DateManipulator.stringToDate(DateManipulator.java:24)\nat main.Main.main(Main.java:15)\nnull\n</code></pre> <p></p>"},{"location":"usage-example/#convert-a-string-into-javasqltimestamp","title":"Convert a String into java.sql.Timestamp","text":"<p>To convert a <code>String</code> into a <code>java.sql.Timestamp</code>, read the example in the following snippet:</p> <pre><code>import io.github.hvna9.consultantutils.data.DateManipulator;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    String date = \"12/01/2023\";\n    Timestamp timestampFromString = DateManipulator.stringToTimestamp(date, \"dd/MM/yyyy\");\n\n    System.out.println(timestampFromString);\n\n  }\n\n}\n</code></pre> <p>Output:</p> <pre><code>2023-01-12 00:00:00.0\n</code></pre> <p></p>"},{"location":"usage-example/#convert-a-date-into-localdatetime","title":"Convert a Date into LocalDateTime","text":"<p>Let'see how to convert a <code>java.util.Date</code> into a <code>java.time.LocalDateTime</code>:</p> <pre><code>import java.time.LocalDateTime;\nimport java.util.Date;\n\nimport io.github.hvna9.consultantutils.data.DateManipulator;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    Date date = new Date();\n    LocalDateTime ldt = DateManipulator.dateToLocalDateTime(date);\n\n    System.out.println(ldt);\n  }\n\n</code></pre> <p>Output:</p> <pre><code>2023-02-05T13:26:03.655\n</code></pre>"},{"location":"usage-example/#filemanipulator","title":"FileManipulator","text":"<p>A class with useful methods to work with files.</p> <p></p>"},{"location":"usage-example/#retrieve-the-mime-type-of-a-file","title":"Retrieve the mime type of a file","text":"<p>Sometimes we need to know the mime type of a file but we have difficult to do it. With this method, we only need to know the file extension to get the mime type of the main file types.</p> <pre><code>import io.github.hvna9.consultantutils.data.FileManipulator;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    String filename = \"doc.pdf\";\n    String mimeType = FileManipulator.retrieveMimeType(filename);\n\n    System.out.println(\"Mime Type: \" + mimeType);\n  }\n\n} \n</code></pre> <p>Output:</p> <pre><code>Mime Type: application/pdf\n</code></pre> <p>In the example above the filename is a fixed string, but of course you can get the filename from any source (such as an input file). Be sure that the name has the complete extension inside.</p> <p></p>"},{"location":"usage-example/#retrieve-extension-from-a-file","title":"Retrieve extension from a file","text":"<p>The method to retrieve the extension from a filename is the same used inside the FileManipulator.retrieveMimeType(), but we can use it also in stand-alone mode, just to get the extension of a file from his name:</p> <pre><code>import io.github.hvna9.consultantutils.data.FileManipulator;\n\npublic class Main {\n\n  public static void main(String[] args) {\n    String filename = \"doc.pdf\";\n    String extension = FileManipulator.retrieveExtensionFromFilename(filename);\n\n    System.out.println(\"File extension: \" + extension);\n  }\n\n} \n</code></pre> <p>Output:</p> <pre><code>File extension: pdf\n</code></pre> <p></p>"},{"location":"usage-example/#how-to-generate-an-excel","title":"How to generate an Excel","text":""},{"location":"static/javadoc/apidocs/legal/jquery/","title":"Jquery","text":""},{"location":"static/javadoc/apidocs/legal/jquery/#jquery-v360","title":"jQuery v3.6.0","text":""},{"location":"static/javadoc/apidocs/legal/jquery/#jquery-license","title":"jQuery License","text":"<pre><code>jQuery v 3.6.0\nCopyright OpenJS Foundation and other contributors, https://openjsf.org/\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n******************************************\n\nThe jQuery JavaScript Library v3.6.0 also includes Sizzle.js\n\nSizzle.js includes the following license:\n\nCopyright JS Foundation and other contributors, https://js.foundation/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/sizzle\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above.\n\n*********************\n\n</code></pre>"},{"location":"static/javadoc/apidocs/legal/jqueryUI/","title":"jqueryUI","text":""},{"location":"static/javadoc/apidocs/legal/jqueryUI/#jquery-ui-v1121","title":"jQuery UI v1.12.1","text":""},{"location":"static/javadoc/apidocs/legal/jqueryUI/#jquery-ui-license","title":"jQuery UI License","text":"<pre><code>Copyright jQuery Foundation and other contributors, https://jquery.org/\n\nThis software consists of voluntary contributions made by many\nindividuals. For exact contribution history, see the revision history\navailable at https://github.com/jquery/jquery-ui\n\nThe following license applies to all parts of this software except as\ndocumented below:\n\n====\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n====\n\nCopyright and related rights for sample code are waived via CC0. Sample\ncode is defined as all source code contained within the demos directory.\n\nCC0: http://creativecommons.org/publicdomain/zero/1.0/\n\n====\n\nAll files located in the node_modules and external directories are\nexternally maintained libraries used by this software which have their\nown licenses; we recommend you read them, as their terms may differ from\nthe terms above.\n\n</code></pre>"}]}